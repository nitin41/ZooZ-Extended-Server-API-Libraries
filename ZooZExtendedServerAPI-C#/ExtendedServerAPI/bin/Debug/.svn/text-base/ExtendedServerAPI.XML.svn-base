<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExtendedServerAPI</name>
    </assembly>
    <members>
        <member name="T:ZooZQueryTypes.ClosedBetweenDatesQuery">
            <summary>
            Get all the transactions details between specific dates. </summary>
        </member>
        <member name="T:AbstractClasses.QueryType">
            <summary>
            Queries for the " Get Transaction Details By Parameters API " </summary>
            <remarks>
            Queries availbe:
            InvoiceNumberQuery , ClosedBetweenDatesQuery , StatusAndDatesQuery , CustomerLoginIdQuery , CustomerLoginNameQuery </remarks>
        </member>
        <member name="M:ZooZQueryTypes.ClosedBetweenDatesQuery.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Class constructor.
            </summary>
            <param name="startDate">
            The earliest date for the requested transactions. </param>
            <param name="endDate">
            The latest date for the requested transactions. </param>
        </member>
        <member name="T:ZooZQueryTypes.CustomerLoginIDQuery">
            <summary>
            Get all the transactions followed by a specific customer login Id  </summary>
        </member>
        <member name="M:ZooZQueryTypes.CustomerLoginIDQuery.#ctor(System.String)">
            <summary>
            Class constructor
            </summary>
            <param name="customerLoginID">
            The	customer login ID on the merchant's	app. </param>
        </member>
        <member name="T:ZooZQueryTypes.CustomerLoginNameQuery">
            <summary>
            Get all the transactions followed by a specific customer login mame  </summary>
        </member>
        <member name="M:ZooZQueryTypes.CustomerLoginNameQuery.#ctor(System.String)">
            <summary>
            Class constructor.
            </summary>
            <param name="customerLoginName">
            The	customer login name on the merchant's app. </param>
        </member>
        <member name="T:CommandClasses.CancelSubscription">
            <summary>
            Cancel Subscription API </summary>
            <remarks>
            This allows you to cancel a subscription.
            The subscription status will be "CanceledByMerchant".  </remarks>
        </member>
        <member name="M:CommandClasses.CancelSubscription.#ctor(System.String)">
            <summary> 
            Class constructor </summary> 
            <param name="SubscriptionID">  
            SubscriptionID is a unique identifier on ZooZ's servers as you get from the response
            whether itÕs from ZooZ's SDK response or callback response, after the user subscribes to your plan. </param>
        </member>
        <member name="M:CommandClasses.CancelSubscription.cancelSubscription">
            <summary> 
            Cancel the subscription  </summary> 
            <returns>
            A Json object which contains the result from the ZooZ Servers regards this action. </returns>
        </member>
        <member name="T:CommandClasses.CancelTransaction">
            <summary>
            Cancel Transaction API </summary>
            <remarks>
            The cancel transaction API is enabled only if your app is set to deferred payments.
            It allows you to cancel a specific pending transaction. </remarks>
        </member>
        <member name="M:CommandClasses.CancelTransaction.#ctor(System.String)">
            <summary>
            Class Constructor. </summary>
            <param name="transactionID"> 
            Transaction ID is unique identifier on ZooZ's servers as you get from the response whether it's from ZooZ's SDK response or callback response,
            after the user authorized or commit a transaction. </param>
        </member>
        <member name="M:CommandClasses.CancelTransaction.cancelTransaction">
            <summary> 
            Cancel the transaction  </summary> 
            <returns>
            A Json object which contains the result from the ZooZ Servers regards this action.</returns>
        </member>
        <member name="T:CommandClasses.CheckSubscription">
            <summary>
            Check Subscription API </summary>
            <remarks>
            This allows you to check a subscription's status. </remarks>
        </member>
        <member name="M:CommandClasses.CheckSubscription.#ctor(System.String)">
            <summary>
            Class constructor </summary>
            <param name="subscriptionID">
            Subscription ID is a unique identifier on ZooZ's servers as you get from the response whether it's from ZooZ's SDK response or callback response, 
            after the user subscribes to your plan. </param>
        </member>
        <member name="M:CommandClasses.CheckSubscription.checkSubscription">
            <summary> 
            Check the subscription status</summary> 
            <returns>
            A Json object which contains the result from the ZooZ Servers regards this action.</returns>
        </member>
        <member name="T:CommandClasses.CommitTransaction">
            <summary>
            Commit Transaction API </summary>
            <remarks>
            If your app is set to the deferred payments setting (App setting in
            the ZooZ portal) then the flow of payments is separated to the following two phases:
            1. User authorizes the transaction with ZooZ (Over Mobile Device)
            2. Your server approves the purchase
            This flexibility allows merchants to review the user order before making the actual charge.
            Using ZooZ developerÕs portal or using command API, you can choose to commit or
            ignore that transaction after the user authorizes it.
            You can call this API up to 14 days after the transaction was authorized.
            In case you want to do partial commit, send the amount parameter. </remarks>
        </member>
        <member name="M:CommandClasses.CommitTransaction.#ctor(System.String,System.Nullable{System.Double},Newtonsoft.Json.Linq.JObject)">
            <summary>
            Class constructor </summary>
            <param name="transactionID">
            Transaction ID is unique identifier on ZooZ's servers as you get from the response whether it's from ZooZ's SDK response  or callback response, 
            after the user authorized or commit a transaction.</param>
            <param name="amount"> 
            Optional value. If you wish to commit the transaction on a smaller amount than the original amount the transaction was authorized,
            or if you were approved by ZooZ to commit the transaction on higher amount than the original amount.
            Expected format: dddddd.cc	(e.g 105.15) </param>
            <param name="invoice">
            If you wish to commit the transaction on a different invoice. </param>
        </member>
        <member name="M:CommandClasses.CommitTransaction.commitTransaction">
            <summary> 
            Commit the transaction  </summary> 
            <returns>
            A Json object which contains the result from the ZooZ Servers regards this action. </returns>
        </member>
        <member name="T:CommandClasses.GetSubscriptionDetails">
            <summary>
            Get Subscription Details API </summary>
            <remarks>
            Get subscription details with the subscription ID API. This allows you to retrieve complete
            subscription details and its transactions details. This call does not change the subscription </remarks>
        </member>
        <member name="M:CommandClasses.GetSubscriptionDetails.#ctor(System.String)">
            <summary>
            Class constructor
            </summary>
            <param name="subscriptionID">
            Subscription ID is a unique identifier on ZooZ's servers as you get from the response whether it's from ZooZ's SDK response or callback response, 
            after the user subscribes to your plan. </param>
        </member>
        <member name="M:CommandClasses.GetSubscriptionDetails.getSubscriptionDetails">
            <summary> 
            Get the subscription Details</summary> 
            <returns>
            A Json object which contains the result from the ZooZ Servers regards this action.</returns>
        </member>
        <member name="T:CommandClasses.GetTransactionDetailsByParameters">
            <summary>
            Get Transaction Details By Parameters API
            </summary>
            <remarks>
            Getting transactions details by parameters API allows you to retrieve transaction full details
            and transaction status before or/and after commit or refund for all transactions
            corresponding to the selected parameters. This call does not change the transaction state. </remarks>
        </member>
        <member name="M:CommandClasses.GetTransactionDetailsByParameters.#ctor(AbstractClasses.QueryType)">
            <summary>
            Class constructor - adding the specific query parametres to the generated key-value pair list.
            </summary>
            <param name="requestedQuery"> One of the queries available in the API </param>
        </member>
        <member name="M:CommandClasses.GetTransactionDetailsByParameters.getTransactionDetailsByParameters">
            <summary> 
            Get the transactions details</summary> 
            <returns>
            A Json object which contains the result from the ZooZ Servers regards this action.</returns>
        </member>
        <member name="T:CommandClasses.GetTransactionDetailsByPayerEmail">
            <summary>
            Get Transaction Details By Payer Email API.
            </summary>
            <remarks>
            Getting transactions details by payer's email address API allows you to retrieve transaction
            full details and transaction status before or/and after commit or refund for all transactions
            associated with the above email. This call does not change the transaction state. </remarks>
        </member>
        <member name="M:CommandClasses.GetTransactionDetailsByPayerEmail.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Class constructor.
            </summary>
            <param name="email">
            Payer e-mail address. </param>
            <param name="fromDate">
            Filter the results by dates. Expected format: DateTime object or null. </param>
            <param name="toDate">
            Filter the results by dates. Expected format: DateTime object or null. </param>
        </member>
        <member name="M:CommandClasses.GetTransactionDetailsByPayerEmail.getTransactionDetailsByPayerEmail">
            <summary> 
            Get the transactions details</summary> 
            <returns>
            A Json object which contains the result from the ZooZ Servers regards this action.</returns>
        </member>
        <member name="T:CommandClasses.GetTransactionDetailsByTransactionID">
            <summary>
            Get Transaction Details By Transaction ID API.
            </summary>
            <remarks>
            Get transaction details with the transaction ID API.	This allows you to retrieve complete
            transaction details and transaction statuses before and/or after commit or refund. This call
            does not change the transaction state. </remarks>
        </member>
        <member name="M:CommandClasses.GetTransactionDetailsByTransactionID.#ctor(System.String)">
            <summary>
            Class Constructor. </summary>
            <param name="transactionID"> 
            Transaction ID is unique identifier on ZooZ's servers as you get from the response whether it's from ZooZ's SDK response or callback response,
            after the user authorized or commit a transaction. </param>
        </member>
        <member name="M:CommandClasses.GetTransactionDetailsByTransactionID.getTransactionDetailsByTransactionID">
            <summary> 
            Get the transactions details</summary> 
            <returns>
            A Json object which contains the result from the ZooZ Servers regards this action.</returns>
        </member>
        <member name="T:CommandClasses.GetTransactionDetailsByUserId">
            <summary>
            Get Transaction Details By User Id API
            </summary>
            <remarks>
            Getting transactions details by user ID API allows you to retrieve transaction full details and
            transaction status before or/and after commit or refund for all transactions associated with
            the above email. This call does not change the transaction state. </remarks>
        </member>
        <member name="M:CommandClasses.GetTransactionDetailsByUserId.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Class constructor
            </summary>
            <param name="userId">
            Unique identifier on ZooZÕs servers for the user who processed this transaction.
            This value is returned in the Callback API response.</param>
            <param name="fromDate">
            Filter the results by dates. Expected format: DateTime object or null. </param>
            <param name="toDate">
            Filter the results by dates. Expected format: DateTime object or null. </param>
        </member>
        <member name="M:CommandClasses.GetTransactionDetailsByUserId.getTransactionDetailsByUserId">
            <summary> 
            Get the transactions details</summary> 
            <returns>
            A Json object which contains the result from the ZooZ Servers regards this action.</returns>
        </member>
        <member name="T:ZooZQueryTypes.InvoiceNumberQuery">
            <summary>
            Get all the transactions details regarding the same invoice number. </summary>
        </member>
        <member name="M:ZooZQueryTypes.InvoiceNumberQuery.#ctor(System.String)">
            <summary>
            Class constructor
            </summary>
            <param name="invoiceNumber">
            The invoice number of the requested transaction.</param>
        </member>
        <member name="T:ZooZQueryTypes.StatusAndDatesQuery">
            <summary>
            Get all the transactions details between specific dates followed by a specific status  </summary>
        </member>
        <member name="M:ZooZQueryTypes.StatusAndDatesQuery.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Class constructor.
            </summary>
            <param name="paymentStatus">
            Can be one of the following:
            Pending, TPCPending, AuthorizationProcess, Succeed,	Failed, UserRejected, POSCanceled, Timeout </param>
            <param name="startDate">
            The earliest date for the requested transactions. </param>
            <param name="endDate">
            The latest date for the requested transactions. </param>
        </member>
        <member name="T:ExtendedSeverAPI.ZooZExtendedServerAPISample">
            <summary>
            ZooZ Extended Server API Sample.
            <item>
            <term> Author</term>
            <description> Roy Keynan - ZooZ Software developer </description>
            </item>
            </summary>
            <remarks>
            ZooZ Extended server API allows you to extend your control and manageability of your payment transactions.
            With the Extended Server API you can:
            1. Defer payments -??approve your usersÕ purchases after they authorize ZooZ transactions
            2. Get full details on transactions by transaction ID or payee email address.
            3. Refund transactions Prior to initiating any forms of integration, it will be necessary for you to sign up for ZooZ at http://www.ZooZ.com.
            
            The purpose of this guide is to provide you with all necessary information for integration, however if you have
            any questions, please feel free to contact us at support@ZooZ.com </remarks>
        </member>
        <member name="T:CommandClasses.RefundTransaction">
            <summary>
            Refund Transaction API
            </summary>
            <remarks>
            The Refund Transaction API allows you to refund a specific transaction.
            You can call this API up to 60 days after the transaction was executed.
            In case you want to do partial refund, send the amount parameter.</remarks>
        </member>
        <member name="M:CommandClasses.RefundTransaction.#ctor(System.String,System.Nullable{System.Double})">
            <summary>
            
            </summary>
            <param name="transactionID">
            Transaction ID is unique identifier on ZooZ's servers as you get from the response
            whether it's from ZooZ's SDK response or callback response, after the user authorized
            or commit a transaction.</param>
            <param name="amount"> 
            Optional value. If you wish to commit the transaction on a smaller amount than the original amount the transaction was authorized,
            or if you were approved by ZooZ to commit the transaction on higher amount than the original amount.
            Expected format: dddddd.cc	(e.g 105.15) </param>
        </member>
        <member name="M:CommandClasses.RefundTransaction.refundTransaction">
            <summary> 
            Refund the transaction.  </summary> 
            <returns>
            A Json object which contains the result from the ZooZ Servers regards this action. </returns>
        </member>
        <member name="M:ExtendedSeverAPI.ZooZExtendedServerAPI.init(System.String,System.String,System.Boolean)">
            <summary>
             Initialize the ZooZExtendedServerAPI to enable communication with your account
            </summary>
            <param name="zooz_Developer_Id">
            Developer email as entered in ZooZ Developer portal. </param>
            <param name="zooz_Server_API_Key">
            ZooZ Server API Key assigned to you upon registration. Can be found on the "Account" section of the ZooZ Developer Portal. </param>
            <param name="is_Sandbox">
            True to use sandbox environment, false to use live environment. </param>
        </member>
    </members>
</doc>
